<?php
/**
 * php document by Asika
 */ 

defined('_JEXEC') or die;

class RefModelTasks extends JModelList
{
	public function __construct($config=array())
	{
		// $this->filter_fields will use this list to filter request into states
		// The order system which auto generated by ModelList will also need this list.
		$config['filter_fields'] = array(
			'name' ,
			'created' ,
			'engine' ,
			'search' ,
			'ordering',
			'filter_order'
		);
		
		//$this->config = $config ;
		
		parent::__construct($config);
	}
	
	
	public function populateState($ordering = null, $direction = null)
	{
		$app = JFactory::getApplication();
		
		/*
		Set $this->filter_fields into Model States and global User States.
		Then, when page changed, these states will still retain in session 
			for us to get everywhere.
		*/
		foreach( $this->filter_fields as $field ){
			
			$this->setState($field, $app->getUserStateFromRequest($this->context.'.field.'.$field, $field) );
		}
		
		parent::populateState('a.created', 'desc' );
	}

	public function getListQuery()
	{
		$db		= $this->getDbo();
      	$q		= $db->getQuery(true);
		$state	= $this->getState();
		$search = $state->get('search');
		$order	= $state->get('list.ordering') ;
		$dir 	= $state->get('list.direction') ;
		$where	= '' ;
		
		if( $search ){
			$where = " AND {$search['field']} LIKE '%{$search['index']}%' ";
		}
		
		/*
		Build query, and return to JModelList::getItems().
		We don't need to override getItems(), just call this method in view.html.php.
		We don't need LIMIT syntex too. JDatabase will auto generate this syntex 
			by "list.ordering" which in User States or Model States.
		*/
		$select = 
		"a.*, b.*,c.*, d.*, ".
		"COUNT(b.id) AS search_pages, ".
		"COUNT(d.id) AS num_ablitily, ".
		"COUNT(c.id) AS num_url, ".
		"COUNT(d.parsed) AS num_parsed, ".
		"a.id AS id, ".
		"a.name AS name, ".
		"a.engine AS a_engine, ".
		"a.published AS published, ".
		"a.ordering AS ordering, ".
		"a.created AS created, ".
		"a.database AS a_database "
		;
		
		$q->select($select)
			->from('#__rp_tasks AS a')
			->leftJoin('#__rp_searchengine_pages 	AS b ON a.id = b.task_id')
			->leftJoin('#__rp_url_index 			AS c ON c.page = b.page AND c.task_id = b.task_id')
			->leftJoin('#__rp_pages_data 			AS d ON d.url_id = c.id')
			->where('a.status > 0'.$where)
			->where("( c.link_type='normal' OR c.link_type IS NULL )")
			->group('a.id')
			->order("{$order} {$dir}") ;
		
		return $q ;
	}
	
	public function getFilter()
	{
		// Get filter inputs from from xml files in /models/form.
		JForm::addFormPath(REF_SITE.'/models/forms');
        JForm::addFieldPath(REF_SITE.'/models/fields');
		$form = JForm::getInstance('com_ref.tasks.filter', 'tasks', array( 'control' => 'search' ,'load_data'=>'true'));
		
		// Get default data of this form. Any State key same as form key will auto match.
		$form->bind( $this->getState('search') );
		
		return $form;
	}
}